generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String    @unique
  image     String?
  roles     Role      @default(USER)
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
}

type position {
  shelfId String
  height  Int
  index   Int
}

model Pallet {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  numberId String  @unique
  product  String
  size     String?
  pieces   Int?
  boxBrand String?

  position position?

  camaraCode String
  shipped    Boolean @default(false)
  selected   Boolean @default(false)

  tagsId String[] @default([]) @db.ObjectId
  tags   Tag[]    @relation(fields: [tagsId], references: [id])

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
}

enum Role {
  ADMIN
  USER
  READER
}

model BoxBrand {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  code String @unique
  name String
}

model Product {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  code     String   @unique
  name     String
  calibers String[]
}

model Camara {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  code   String @unique
  name   String
  width  Int?
  length Int?

  shelves Shelf[]
}

model Shelf {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  name   String
  height Int?   @default(1)
  length Int

  camaraId String
  camara   Camara @relation(fields: [camaraId], references: [code])
}

model Tag {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String  @unique
  color       String
  description String?

  palletsId String[] @db.ObjectId
  pallets   Pallet[] @relation(fields: [palletsId], references: [id])
}
